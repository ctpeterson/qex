#!/bin/bash

usage() {
  s="------------------------------------------------------------------------"
  echo $s
  echo "$0:"
  echo " installs Nim compiler and tools (https://nim-lang.org)"
  echo $s
  echo "options:"
  echo " -h          (this help message)"
  echo " stable      (install latest stable version)"
  echo " <version>   (install named version, e.g. 0.16.0)"
  echo " master      (install master branch tracking version)"
  echo " devel       (install devel branch tracking version)"
  echo " default stable|<version>|master|devel"
  echo "                            (set default version)"
  echo $s
  echo "The default installation location is in '\$HOME/nim'."
  echo "This directory will be created if it does not already exist."
  echo "It will also create symlinks in '\$HOME/bin' if that directory exists."
  echo $s
  exit
}

if [ "X$1" = "X" ]; then
  usage
fi

switch="0"
if [ "X$1" = "Xdefault" ]; then
  switch="1"
  shift
fi

ver="stable"
branch="master"
if [ "X$1" != "X" ]; then
  case "$1" in
    stable) ver="stable";;
    master) ver="master";;
    devel)  ver="devel";  branch="devel";;
    -h) usage;;
    *) ver="$1"; branch="v$1";;
  esac
fi

rootdir="$HOME/nim"
if [ "X$NIMDIR" != "X" ]; then
  rootdir="$NIMDIR"
fi
bindir="$HOME/bin"
if [ "X$BINDIR" != "X" ]; then
  bindir="$BINDIR"
fi
nimdir="Nim-$ver"

getVer() {
  exe="$1"
  bin/$exe -v 2>&1 |head -n1 |sed 's/[^0-9]*\([0-9.]*\).*/\1/'
}

install() {
  exe="$1"
  if [ ! -e bin/$exe ]; then return; fi
  v="$ver"
  if [ $v != "master" -a $v != "devel" ]; then
    v=`getVer $exe`
  fi
  exev="$exe-$v"
  if [ -d $bindir ]; then
    echo "installing $exev in $bindir"
    cd $bindir
    rm -f $exev
    #cp -a $rootdir/$nimdir/bin/$exe $exev
    ln -s $rootdir/$nimdir/bin/$exe $exev
    rm -f $exe
    ln -s $exev $exe
  fi
  cd $rootdir/$nimdir
}

realpath2() {
  [[ $1 = /* ]] && echo "$1" || echo "$PWD/${1#./}"
}

installAll() {
  install nim
  install nimble
  install nimgrep
  install nimsuggest
  me0=`basename $0`
  #me=`realpath -s $0`
  #me=`readlink -f $0`
  me=`realpath2 $0`
  if [ -d $bindir -a ! -e $bindir/$me0 ]; then
    cd $bindir
    ln -s $me
    cd -
  fi
}

if [ $switch = 1 ]; then
  cd $rootdir
  if [ $ver = "stable" ]; then
    nimdir=`ls -1d Nim-[0-9]* |tail -n1`
  fi
  echo "Setting default Nim to $nimdir"
  cd $nimdir
  installAll
  exit
fi

echo "Installing Nim version '$ver' in directory $rootdir/$nimdir"

if [ ! -e $rootdir ]; then
  mkdir $rootdir
fi
cd $rootdir

if [ ! -e $nimdir ]; then
  git clone -b $branch https://github.com/nim-lang/Nim.git $nimdir
  if [ ! -e $nimdir ]; then
    echo "can't clone Nim branch: $branch"
    exit 1
  fi
fi
cd $nimdir

git checkout $branch
if [ $branch = "master" -o $branch = "devel" ]; then
  git pull
fi

if [ -e csources ]; then
  cd csources
  git pull
  cd ..
else
  if [ $branch = "master" -o $branch = "devel" ]; then
    git clone --depth 1 https://github.com/nim-lang/csources
  else
    cb="v0.20.0"
    case $ver in
      0.9.*|0.10.*|0.11.*|0.12.*) cb="v0.9.4";;
      0.13.*|0.14.*|0.15.0) cb="v0.13.0";;
      0.15.*) cb="v0.15.2";;
      0.16.*) cb="v0.16.0";;
      0.17.*) cb="v0.17.0";;
      0.18.*) cb="v0.18.0";;
      0.19.*) cb="v0.19.0";;
    esac
    echo "Installing csources '$cb'"
    git clone -b $cb --depth 1 https://github.com/nim-lang/csources
  fi
fi
cd csources && sh build.sh && cd ..

bin/nim c koch
./koch boot -d:release

./koch tools
./koch nimble

if [ $ver = "stable" ]; then
  ver=`getVer nim`
  nimdir="Nim-$ver"
  cd ..
  if [ -e $nimdir ]; then
    rm -rf $nimdir
  fi
  mv Nim-stable $nimdir
  cd $nimdir
fi

installAll
